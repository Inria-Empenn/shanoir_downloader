name: Python installation

on: [push]

jobs:
  build:
    strategy:
      matrix:
        os: [ubuntu-latest]
        python-version: ["3.8", "3.9", "3.10"]
        #TODO: use github action to read python version from pyproject.toml
    runs-on:  ${{ matrix.os }}
    steps:
      - uses: actions/checkout@v4
      - name: Setup Python
        uses: conda-incubator/setup-miniconda@v3
        with:
          auto-update-conda: true
          environment-file: environment.yml
          activate-environment: test-install
          python-version: ${{ matrix.python-version }}

      # Create virtual env under each python version
      # (optional and a bit redundant because we are already on a specific python)
      # it insures installation instruction provided in README are working
#      - name: Test with pytest
#        run: pytest tests.py --doctest-modules --junitxml=junit/test-results-${{ matrix.python-version }}.xml
#      - name: Upload pytest test results
#        uses: actions/upload-artifact@v4
#        with:
#          name: pytest-results-${{ matrix.python-version }}
#          path: junit/test-results-${{ matrix.python-version }}.xml
#        # Use always() to always run this step to publish test results when there are test failures
#        if: ${{ always() }}
